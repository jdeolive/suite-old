#!/bin/bash
# prerm script for geonode
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

#pg_run <cmd> [password]
function pg_run() {
  su - postgres -c "PGPASSWORD=$2 $1" > /dev/null
}

case "$1" in
    remove|deconfigure)
    
    # if last configured version does not exist or the last configured version
    # is less than 2.4.0 then configure
    if [ -z "$2" ] || dpkg --compare-versions "$2" lt 2.4.0; then
       db_get opengeo_postgis/configure_postgis
       if [ "$RET" == "true" ]; then

         db_get opengeo_postgis/postgres_password
         PGPASSWORD=$RET

         # turn off error trapping, one of these may fail
         set +e
 
         db_get opengeo_postgis/install_template_postgis
         if [ "$RET" == "true" ]; then
           pg_run "psql -w -d template_postgis -c \"update pg_database set datistemplate = false where datname = 'template_postgis'\"" $PGPASSWORD
           pg_run "dropdb -w template_postgis" $PGPASSWORD
         fi

         db_get opengeo_postgis/install_demo_db
         if [ "$RET" == "true" ]; then
           pg_run "dropdb -w medford" $PGPASSWORD
         fi

         db_get opengeo_postgis/install_geoserver_db
         if [ "$RET" == "true" ]; then
           pg_run "dropdb -w geoserver" $PGPASSWORD
         fi

         db_get opengeo_postgis/create_opengeo_user
         if [ "$RET" == "true" ]; then
           pg_run "dropuser -w opengeo" $PGPASSWORD
         fi

         db_get opengeo_postgis/install_adminpack
         if [ "$RET" == "true" ]; then
           pg_run "psql -w -f /usr/share/postgresql/8.4/contrib/uninstall_adminpack.sql -d postgres" $PGPASSWORD
         fi

         # turn it back on
         set -e
      fi
    fi
    ;;

    upgrade|failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

