#!/bin/bash
# postinst script for geonode
#
# see: dh_installdeb(1)

. /usr/share/debconf/confmodule

set -e

# summary of how this script can be called:
#	* <postinst> `configure' <most-recently-configured-version>
#	* <old-postinst> `abort-upgrade' <new version>
#	* <conflictor's-postinst> `abort-remove' `in-favour' <package>
#	  <new-version>
#	* <postinst> `abort-remove'
#	* <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#	  <failed-install-package> <version> `removing'
#	  <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

WEBAPPS=/var/lib/tomcat6/webapps
JVM_OPTS='JAVA_OPTS="-Djava.awt.headless=true -Xms256m -Xmx768m -Xrs -XX:PerfDataSamplingInterval=500 -XX:MaxPermSize=128m"'
GEOEXPLORER_DATA='GEOEXPLORER_DATA="/usr/share/opengeo-suite-data/geoexplorer_data"'
GEOWEBCACHE_CACHE_DIR='JAVA_OPTS="${JVM_OPTS} -DGEOWEBCACHE_CACHE_DIR=/var/cache/gwc"'

function randpass() {
  [ "$2" == "0" ] && CHAR="[:alnum:]" || CHAR="[:graph:]"
    cat /dev/urandom | tr -cd "$CHAR" | head -c ${1:-32}
    echo
}

function configure_tomcat() {

	# configure tomcat
    # check for presence of GEOEXPLORER_DATA as a test if we've done this yet
    if [ "$(grep ^GEOEXPLORER_DATA /etc/default/tomcat6)" == "" ]; then 
        cp /etc/default/tomcat6 /etc/default/tomcat6.orig
        echo $JVM_OPTS >> /etc/default/tomcat6
        echo $GEOEXPLORER_DATA >> /etc/default/tomcat6
        
        # setup GWC default location
        mkdir -p /var/cache/gwc
        chown tomcat6. /var/cache/gwc
    fi 

    # GWC doesn't work as advertised
    if [ "$(grep ^JAVA_OPTS.\*-DGEOWEBCACHE /etc/default/tomcat6)" == "" ]; then 
        echo $GEOWEBCACHE_CACHE_DIR >> /etc/default/tomcat6
    fi

	# Ubuntu versions earlier than 9.10 have this setting turned on, it breaks geoserver.
	sed -i -e 's/TOMCAT6_SECURITY=yes/TOMCAT6_SECURITY=no/g' /etc/default/tomcat6
}

function update_proxyurl() {
    local proxyurl=$1
    if [ ! -z "$proxyurl" ]; then
      GLOBAL_XML=/usr/share/opengeo-suite-data/geoserver_data/global.xml
      if [ -e $GLOBAL_XML ]; then
        sed -i 's/<\(proxyBaseUrl>.*<\/proxyBaseUrl\)>/<\!--\1-->/g' $GLOBAL_XML
        sed -i "/<\/global>/i \
  <proxyBaseUrl>$proxyurl<\/proxyBaseUrl>" $GLOBAL_XML
      fi
    fi
}

function update_userpass() {
    local username=$1
    local password=$2
    USERS_PROPS=/usr/share/opengeo-suite-data/geoserver_data/security/users.properties
	cat <<- EOF > $USERS_PROPS
	$username=$password,ROLE_ADMINISTRATOR
	# These are sample users you may uncomment if you want to test locking down wfs (see service.properties)
	#wfst=wfst,ROLE_WFS_READ,ROLE_WFS_WRITE
	#wfs=wfs,ROLE_WFS_READ
	EOF
    chown tomcat6. $USERS_PROPS
}

function unpack_war() {
    cp /usr/share/opengeo-geoserver/geoserver.war $WEBAPPS
    unzip  -o /var/lib/tomcat6/webapps/geoserver.war  -d $WEBAPPS/geoserver  > /dev/null 2>&1
    chown tomcat6. /usr/share/opengeo-geoserver/*.war
}

case "$1" in
    configure)
    
	# stop tomcat to prevent it from automatically unpacking the war files
	invoke-rc.d tomcat6 stop

    # only update configuration if the package has not yet been configured
    if [ -z "$2" ]; then
      db_get opengeo_geoserver/proxyurl
      if [ "$RET" ]; then
         proxyurl="$RET"
      else
         proxyurl=""
      fi

      db_get opengeo_geoserver/username
      if [ "$RET" ]; then
        username="$RET"
      else
        username="admin"
      fi

      db_get opengeo_geoserver/password_confirm
      password="$RET"
      if [ -z "$password" ]; then
        password="geoserver"
      fi

      update_proxyurl $proxy_url
      update_userpass $username $password
    fi
    
    # run configure tomcat no matter what to deal with changes
    configure_tomcat

    # don't totally blow away the old exploded war, save the web.xml since it
    # has configuration in it
    if [ -e $WEBAPPS/geoserver ]; then
      # clear out the old lib dir
      rm -f $WEBAPPS/geoserver/WEB-INF/lib/*

      # back up the old web.xml
      TMP=/tmp/opengeo-geoserver
      mkdir $TMP; cp $WEBAPPS/geoserver/WEB-INF/web.xml $TMP;

      # unpack the new war
      unpack_war

      # restore old web.xml
      cp $TMP/web.xml $WEBAPPS/geoserver/WEB-INF

      rm -rf $TMP
    else
      # not there, treat as regular install
      unpack_war
    fi

    # TODO: check if tomcat was actually running before we installed
    # service tomcat6 status (will return 0 if running, 1 if not)
    invoke-rc.d tomcat6 start
    ;;

    triggered)

    (echo $2 | grep /etc/default/tomcat6) && configure_tomcat

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
	echo "postinst called with unknown argument \`$1'" >&2
	exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop;

exit 0
